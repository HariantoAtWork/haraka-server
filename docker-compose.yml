version: '2'

volumes:
    mysqld:
    
services:
  certs:
    env_file: docker-compose.env
    build: build/certs
    volumes:
      - ./data/ssl:/etc/ssl

  haraka:
    env_file: docker-compose.env
    build: build/haraka
    restart: unless-stopped
    ports:
      - '25:25'
      - '465:465'
      - '587:587'
    volumes:
      - ./data/haraka:/app/outbound
      - ./data/mail:/var/mail
    volumes_from:
      - data

  mariadb:
    env_file: docker-compose.env
    build: build/mariadb
    # image: mariadb
    restart: unless-stopped
    # environment: 
    #   MYSQL_ROOT_PASSWORD: 6f56b7e6
    volumes:
      - ./data/mariadb:/var/lib/mysql
      # - ./mariadb.cnf:/etc/mysql/mariadb.cnf:ro
      # - mysqld:/var/run/mysqld

  mariadb-admin:
    env_file: docker-compose.env
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    links:
      - mariadb
    depends_on:
      - mariadb
    # ports:
    #   - "8000:80"
    # volumes:
    #   - ./data/mariadb-admin:/var/www/html

  mail-admin:
    env_file: docker-compose.env
    build: build/mail-admin
    # image: postfixadmin:3.2
    restart: unless-stopped
    links:
      - mariadb
    depends_on:
      - certs
      - mariadb
    # ports:
    #   - "80:80"
    volumes:
      # - ./build/mail-admin/config.local.php:/var/www/html/config.local.php:ro
      - ./data/mail-admin:/var/www/html

  dovecot:
    env_file: docker-compose.env
    build: build/dovecot
    restart: unless-stopped
    links:
      - mariadb
    depends_on:
      - certs
      - mariadb
    ports:
    # POP3
     - '110:110'
     - '995:995'
    # IMAP
     - '143:143'
     - '993:993'
    # SMTP SSL: Submission
    #  - '587:587'
    # LMTP
     - '24:24'
    # ManageSieve
     - '4190:4190'
    volumes:
      - ./data/mail:/var/mail
    volumes_from:
      - data

  # roundcube:
  #   image: roundcube/roundcubemail:1.4.x-apache
  #   restart: unless-stopped
  #   env_file: docker-compose.env
  #   # ports:
  #   #   - "80:80"
  #   links:
  #     - postgres
  #   depends_on:
  #     - certs
  #     - postgres
  #   volumes_from:
  #     - data



  data:
    image: node:10-alpine
    command: echo "Done."
    volumes:
      - ./data/ssl:/etc/ssl:ro
      - ./data/tmp:/tmp

# create network: docker network create xnmp-network
networks:
  default:
    external:
      name: xnmp-network